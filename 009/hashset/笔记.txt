JDK 7及之前的版本
    HashSet第一次存储abc过程
        1.首先底层会创建一个长度为16的数组，该数组作为哈希表
        2.根据当前元素（abc）的哈希值（利用元素的hashcode的方法）
          底层会 根据哈希值 再结合 某种算法计算出 存储到数组中的索引（假设为3）
        3.此时会判断3索引位置是否为null（判断该位置是否存储元素），为null直接存入abc

    HashSet第二次存储def过程
        1.根据当前元素（def）的哈希值（利用元素的hashcode的方法）
          底层会 根据哈希值 再结合 某种算法计算出 存储到数组中的索引（假设为1）
        2.此时会判断1索引位置是否为null（判断该位置是否存储元素），为null直接存入def

    HashSet第三次存储abc过程
        1.根据当前元素（abc）的哈希值（利用元素的hashcode的方法）
          底层会 根据哈希值 再结合 某种算法计算出 存储到数组中的索引（假设为3）（同第一次）
        2.此时会判断3索引位置是否为null（判断该位置是否存储元素），不为null，发现此位置已存储abc元素
          会将即将存储的abc与集合中已有的abc的哈希值进行比较
          abc和abc的哈希值相同，此时再利用equals方法比较，结果也相同
          底层会认为即将存储的abc 与集合中的abc是相同元素，不在存入hashset